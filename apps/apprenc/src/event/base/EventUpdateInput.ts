/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsNumber,
  Max,
  IsInt,
  ValidateNested,
  IsEnum,
} from "class-validator";

import { Type } from "class-transformer";
import { EventParticipantUpdateManyWithoutEventsInput } from "./EventParticipantUpdateManyWithoutEventsInput";
import { EnumEventType } from "./EnumEventType";

@InputType()
class EventUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  country?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  latitude?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  longitude?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxParticipants?: number | null;

  @ApiProperty({
    required: false,
    type: () => EventParticipantUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => EventParticipantUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => EventParticipantUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  participants?: EventParticipantUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string;

  @ApiProperty({
    required: false,
    enum: EnumEventType,
  })
  @IsEnum(EnumEventType)
  @IsOptional()
  @Field(() => EnumEventType, {
    nullable: true,
  })
  type?: "SPEEDDATING" | "SOCIAL" | "WORKSHOP" | "OTHER";
}

export { EventUpdateInput as EventUpdateInput };
