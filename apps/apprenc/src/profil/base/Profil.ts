/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  Max,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsEnum,
} from "class-validator";
import { Decimal } from "decimal.js";
import { Type } from "class-transformer";
import { EnumProfilInterets } from "./EnumProfilInterets";
import { EnumProfilSexe } from "./EnumProfilSexe";

@ObjectType()
class Profil {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Max(3)
  @IsOptional()
  @Field(() => Float, {
    nullable: true,
  })
  age!: Decimal | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    enum: EnumProfilInterets,
    isArray: true,
  })
  @IsEnum(EnumProfilInterets, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProfilInterets], {
    nullable: true,
  })
  interets?: Array<
    | "Sport"
    | "Musique"
    | "Danse"
    | "Bar"
    | "Tv"
    | "Cinema"
    | "Karaoke"
    | "Dormir"
    | "Plage"
    | "Nature"
    | "JeuxVideo"
  >;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  localisation!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumProfilSexe,
    isArray: true,
  })
  @IsEnum(EnumProfilSexe, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumProfilSexe], {
    nullable: true,
  })
  sexe?: Array<"Masculin" | "Feminin">;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Profil as Profil };
