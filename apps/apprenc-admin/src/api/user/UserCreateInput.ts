import { UserBadgeCreateNestedManyWithoutUsersInput } from "./UserBadgeCreateNestedManyWithoutUsersInput";
import { EventParticipantCreateNestedManyWithoutUsersInput } from "./EventParticipantCreateNestedManyWithoutUsersInput";
import { GroupMemberCreateNestedManyWithoutUsersInput } from "./GroupMemberCreateNestedManyWithoutUsersInput";
import { NotificationCreateNestedManyWithoutUsersInput } from "./NotificationCreateNestedManyWithoutUsersInput";
import { ProfileWhereUniqueInput } from "../profile/ProfileWhereUniqueInput";
import { LikeCreateNestedManyWithoutUsersInput } from "./LikeCreateNestedManyWithoutUsersInput";
import { MessageCreateNestedManyWithoutUsersInput } from "./MessageCreateNestedManyWithoutUsersInput";
import { ReportCreateNestedManyWithoutUsersInput } from "./ReportCreateNestedManyWithoutUsersInput";
import { SocialAccountCreateNestedManyWithoutUsersInput } from "./SocialAccountCreateNestedManyWithoutUsersInput";
import { StoryCreateNestedManyWithoutUsersInput } from "./StoryCreateNestedManyWithoutUsersInput";
import { SubscriptionWhereUniqueInput } from "../subscription/SubscriptionWhereUniqueInput";

export type UserCreateInput = {
  authMethod: "EMAIL" | "GOOGLE" | "FACEBOOK" | "INSTAGRAM";
  badges?: UserBadgeCreateNestedManyWithoutUsersInput;
  email: string;
  emailVerified: boolean;
  events?: EventParticipantCreateNestedManyWithoutUsersInput;
  groups?: GroupMemberCreateNestedManyWithoutUsersInput;
  notifications?: NotificationCreateNestedManyWithoutUsersInput;
  passwordHash?: string | null;
  phoneNumber?: string | null;
  profile?: ProfileWhereUniqueInput | null;
  receivedLikes?: LikeCreateNestedManyWithoutUsersInput;
  receivedMessages?: MessageCreateNestedManyWithoutUsersInput;
  reports?: ReportCreateNestedManyWithoutUsersInput;
  sentLikes?: LikeCreateNestedManyWithoutUsersInput;
  sentMessages?: MessageCreateNestedManyWithoutUsersInput;
  socialAccounts?: SocialAccountCreateNestedManyWithoutUsersInput;
  stories?: StoryCreateNestedManyWithoutUsersInput;
  subscription?: SubscriptionWhereUniqueInput | null;
  trustScore: number;
  verificationStatus: "PENDING" | "VERIFIED" | "REJECTED";
};
